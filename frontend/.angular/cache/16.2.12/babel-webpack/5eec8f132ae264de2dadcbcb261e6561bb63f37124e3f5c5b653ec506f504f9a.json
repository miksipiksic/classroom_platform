{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.uri = \"http://localhost:4000/user\";\n  }\n  registerUcenik(user) {\n    return this.http.post('http://localhost:4000/user/registerUcenik', user);\n  }\n  registerNastavnik(user) {\n    return this.http.post('http://localhost:4000/user/registerNastavnik', user);\n  }\n  postojeciKorisnikIme(korisnickoIme) {\n    const data = {\n      korisnickoIme: korisnickoIme\n    };\n    return this.http.post('http://localhost:4000/user/postojeciKorisnikIme', data);\n  }\n  postojeciKorisnikImejl(imejl) {\n    const data = {\n      imejl: imejl\n    };\n    return this.http.post('http://localhost:4000/user/postojeciKorisnikImejl', data);\n  }\n  nadjiLozinku(korisnickoIme) {\n    return this.http.post('http://localhost:4000/user/nadjiLozinku', korisnickoIme);\n  }\n  promeniLozinku(korisnickoIme, lozinka) {\n    const data = {\n      korisnickoIme: korisnickoIme,\n      lozinka: lozinka\n    };\n    return this.http.post('http://localhost:4000/user/promeniLozinku', data);\n  }\n  dohvatiKorisnika(korisnickoIme) {\n    const data = {\n      korisnickoIme: korisnickoIme\n    };\n    return this.http.post('http://localhost:4000/user/dohvatiKorisnika', data);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","constructor","http","uri","registerUcenik","user","post","registerNastavnik","postojeciKorisnikIme","korisnickoIme","data","postojeciKorisnikImejl","imejl","nadjiLozinku","promeniLozinku","lozinka","dohvatiKorisnika","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vm200325d\\Documents\\faks\\pia\\pia_projekat\\frontend\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http'\nimport User from '../models/user';\nimport { Message } from '../models/message';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  uri = \"http://localhost:4000/user\";\n\n  registerUcenik(user:User)  {\n      return this.http.post<Message>('http://localhost:4000/user/registerUcenik', user);\n    }\n\n    registerNastavnik(user: User){\n  \n        return this.http.post<Message>('http://localhost:4000/user/registerNastavnik', user);\n      }\n\n  postojeciKorisnikIme(korisnickoIme: string) {\n    const data = {\n      korisnickoIme: korisnickoIme\n    }\n    return this.http.post<Message>('http://localhost:4000/user/postojeciKorisnikIme', data);\n  }\n\n  postojeciKorisnikImejl(imejl: string) {\n    const data = {\n      imejl: imejl\n    }\n    return this.http.post<Message>('http://localhost:4000/user/postojeciKorisnikImejl', data);\n  }\n\n  nadjiLozinku(korisnickoIme: string) {\n    return this.http.post<string>('http://localhost:4000/user/nadjiLozinku', korisnickoIme);\n  }\n\n  promeniLozinku(korisnickoIme: string, lozinka: string) {\n    const data = {\n      korisnickoIme: korisnickoIme,\n      lozinka: lozinka\n    }\n    return this.http.post<Message>('http://localhost:4000/user/promeniLozinku', data);\n  }\n\n  dohvatiKorisnika(korisnickoIme: string) {\n    const data = {\n      korisnickoIme: korisnickoIme\n    }\n    return this.http.post<User>('http://localhost:4000/user/dohvatiKorisnika', data);\n  }\n\n  \n}\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAExB,KAAAC,GAAG,GAAG,4BAA4B;EAFM;EAIxCC,cAAcA,CAACC,IAAS;IACpB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAU,2CAA2C,EAAED,IAAI,CAAC;EACnF;EAEAE,iBAAiBA,CAACF,IAAU;IAExB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAU,8CAA8C,EAAED,IAAI,CAAC;EACtF;EAEJG,oBAAoBA,CAACC,aAAqB;IACxC,MAAMC,IAAI,GAAG;MACXD,aAAa,EAAEA;KAChB;IACD,OAAO,IAAI,CAACP,IAAI,CAACI,IAAI,CAAU,iDAAiD,EAAEI,IAAI,CAAC;EACzF;EAEAC,sBAAsBA,CAACC,KAAa;IAClC,MAAMF,IAAI,GAAG;MACXE,KAAK,EAAEA;KACR;IACD,OAAO,IAAI,CAACV,IAAI,CAACI,IAAI,CAAU,mDAAmD,EAAEI,IAAI,CAAC;EAC3F;EAEAG,YAAYA,CAACJ,aAAqB;IAChC,OAAO,IAAI,CAACP,IAAI,CAACI,IAAI,CAAS,yCAAyC,EAAEG,aAAa,CAAC;EACzF;EAEAK,cAAcA,CAACL,aAAqB,EAAEM,OAAe;IACnD,MAAML,IAAI,GAAG;MACXD,aAAa,EAAEA,aAAa;MAC5BM,OAAO,EAAEA;KACV;IACD,OAAO,IAAI,CAACb,IAAI,CAACI,IAAI,CAAU,2CAA2C,EAAEI,IAAI,CAAC;EACnF;EAEAM,gBAAgBA,CAACP,aAAqB;IACpC,MAAMC,IAAI,GAAG;MACXD,aAAa,EAAEA;KAChB;IACD,OAAO,IAAI,CAACP,IAAI,CAACI,IAAI,CAAO,6CAA6C,EAAEI,IAAI,CAAC;EAClF;EAAC,QAAAO,CAAA,G;qBA9CUjB,WAAW,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXtB,WAAW;IAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}